import yt_dlp
import requests
import os
import glob
import random
import asyncio
from telethon import events
from telethon.errors import ChatSendMediaForbiddenError
from youtube_search import YoutubeSearch
from repthon import zq_lo
from ..Config import Config

plugin_category = "ุงูุงุฏูุงุช"

# --- ุฏุงูุฉ ุงูุญุตูู ุนูู ุงูููููุฒ (ูู ุนูุฏู) ---
def get_cookies_file():
    """
    ูุจุญุซ ุนู ููู .txt ููููููุฒ ูู ูุฌูุฏ rbaqir ููุฎุชุงุฑ ูุงุญุฏูุง ุนุดูุงุฆููุง.
    """
    try:
        folder_path = f"{os.getcwd()}/rbaqir"
        txt_files = glob.glob(os.path.join(folder_path, '*.txt'))
        if not txt_files:
            print(f"[!] No .txt files found in the specified folder: {folder_path}.")
            return None # ุฃุฑุฌุน None ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ูููุงุช

        cookie_txt_file = random.choice(txt_files)
        print(f"[*] Using cookie file: {cookie_txt_file}")
        return cookie_txt_file
    except FileNotFoundError:
        print(f"[!] Cookie folder not found: {folder_path}.")
        return None
    except Exception as e:
        print(f"[!] Error getting cookie file: {e}")
        return None

def remove_if_exists(file_path):
    """ูุญุฐู ุงูููู ุฅุฐุง ูุงู ููุฌูุฏูุง."""
    if os.path.exists(file_path):
        try:
            os.remove(file_path)
        except Exception as e:
            print(f"Error removing file {file_path}: {e}")



@zq_lo.on(events.NewMessage(pattern=".ุจุญุซ3(?: |$)(.*)"))
async def download_youtube_audio(event):
    """
    ูุจุญุซ ุนู ููุทุน ููุฏูู ุนูู ููุชููุจุ ูููู ุจุชูุฒููู ูุชุญูููู ุฅูู ุตูุช (m4a)ุ
    ูุน ุฏุนู ูููุงุช ุชุนุฑูู ุงูุงุฑุชุจุงุท (cookies).
    ุงูุงุณุชุฎุฏุงู: .ุตูุช_ููุชููุจ [ุงุณู ุงูุฃุบููุฉ ุฃู ุงูููุฏูู]
    """
    input_message = event.pattern_match.group(1).strip()

    if not input_message:
        await event.reply("**โข ูุฑุฌู ูุชุงุจุฉ ุงุณู ุงูุฃุบููุฉ ุฃู ุงูููุฏูู ุจุนุฏ ุงูุฃูุฑ:** `.ุตูุช_ููุชููุจ [ุงุณู ุงูุฃุบููุฉ]`")
        return

    processing_message = await event.reply("**โข ุฌุงุฑู ุงูุจุญุซ ุนู ุงูููุฏูู... ๐**")

    # ุงูุญุตูู ุนูู ูุณุงุฑ ููู ุงูููููุฒ ุจุงุณุชุฎุฏุงู ุฏุงูุชู
    cookie_file_path = get_cookies_file()

    # ุฎูุงุฑุงุช yt-dlp
    ydl_opts = {
        'format': 'bestaudio/best', # ุฃูุถู ุตูุบุฉ ุตูุชูุฉ ูุชุงุญุฉ
        'outtmpl': '%(title)s.%(ext)s', # ูุงูุจ ุงุณู ุงูููู (ุณูุชู ุชุญูููู ุฅูู m4a)
        'postprocessors': [{ # ูุนุงูุฌุงุช ูุงุญูุฉ (ููุชุญููู)
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'm4a', # ุงูุตูุบุฉ ุงููุทููุจุฉ ููุตูุช
            'preferredquality': '192', # ุฌูุฏุฉ ุงูุตูุช (ููููู ุชุบููุฑูุง ุฅุฐุง ุฃุฑุฏุช)
        }],
        'quiet': True, # ุฅุฎูุงุก ูุฎุฑุฌุงุช yt-dlp (ุงุฌุนููุง False ูุฑุคูุฉ ุงูุชูุงุตูู)
        'noplaylist': True, # ุชุฌุงูู ููุงุฆู ุงูุชุดุบููุ ุฎุฐ ุงูููุฏูู ููุท
        'ignoreerrors': True, # ุชุฌุงูู ุงูุฃุฎุทุงุก ุงูุจุณูุทุฉ (ูุซู ุนุฏู ุฅููุงููุฉ ุชูุฒูู ุตูุฑุฉ ูุตุบุฑุฉ)
        # 'proxy': 'socks5://user:password@host:port', # ููููู ุฅุถุงูุฉ ุจุฑููุณู ููุง ุฅุฐุง ุงุญุชุฌุช
    }

    # ุฅุถุงูุฉ ููู ุงูููููุฒ ุฅูู ุงูุฎูุงุฑุงุช ุฅุฐุง ูุงู ููุฌูุฏูุง
    if cookie_file_path:
        ydl_opts['cookiefile'] = cookie_file_path
        print(f"[*] yt-dlp will use cookie file: {cookie_file_path}")

    # ... ุฏุงุฎู ุฏุงูุฉ download_youtube_audio ...
    try:
        search_results = YoutubeSearch(input_message, max_results=1).to_dict()

        if not search_results:
            await processing_message.edit(f"**โข ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ ูู `{input_message}`**")
            return

        # ุชุฃูุฏ ูู ุฃููุง ุญุตููุง ุนูู ูุชูุฌุฉ ุตุงูุญุฉ ูุจู ูุญุงููุฉ ุงููุตูู ุฅูู ุนูุงุตุฑูุง
        first_result = search_results[0] # ุงุญุตู ุนูู ุฃูู ูุชูุฌุฉ ูู ูุชุบูุฑ ูุงุญุฏ

        # ุชุญูู ูู ูุฌูุฏ ุงูููุงุชูุญ ุงููุทููุจุฉ ูุจู ุงุณุชุฎุฏุงููุง
        if 'url_suffix' not in first_result:
            await processing_message.edit(f"**โข ูุดููุฉ ูู ุจูุงูุงุช ุงูุจุญุซุ ูู ูุชู ุงูุนุซูุฑ ุนูู ุฑุงุจุท ุงูููุฏูู.**")
            return

        video_url = f"https://youtube.com{first_result['url_suffix']}"

        # ุชูุฒูู ุงูุตูุฑุฉ ุงููุตุบุฑุฉ
        # ุงุณุชุฎุฏู .get() ููููู ุฃูุซุฑ ุฃูุงููุง
        thumbnail_url = first_result.get('thumbnails', [{}])[0].get('url')
        thumb_name = None
        if thumbnail_url:
            safe_title_thumb = "".join([c if c.isalnum() or c in (' ', '_', '-') else '_' for c in first_result.get('title', 'thumbnail')[:40]])
            thumb_name = f"{safe_title_thumb}.jpg"
            try:
                response = requests.get(thumbnail_url, allow_redirects=True, timeout=10)
                if response.status_code == 200:
                    with open(thumb_name, "wb") as f:
                        f.write(response.content)
                else:
                    thumb_name = None # ูุดู ุงูุชูุฒูู
            except Exception as e:
                print(f"[!] Error downloading thumbnail: {e}")
                thumb_name = None

        # ... ุจููุฉ ุงูููุฏ (ุชูุฒูู ุงูุตูุช ูุงูุชุญููู ูุงูุฅุฑุณุงู) ...

            thumb_name = f"{search_results[0]['title'][:40].replace('/', '_').replace(':', '_').replace('?', '_')}.jpg" # ุชูุธูู ุงุณู ุงูููู
            try:
                # ุงุณุชุฎุฏุงู requests ููุชูุฒููุ ูุง ูุญุชุงุฌ ูู yt-dlp ููุง
                response = requests.get(thumbnail_url, allow_redirects=True, timeout=10)
                if response.status_code == 200:
                    with open(thumb_name, "wb") as f:
                        f.write(response.content)
                else:
                    thumb_name = None # ูุดู ุงูุชูุฒูู
            except Exception as e:
                print(f"[!] Error downloading thumbnail: {e}")
                thumb_name = None

    except Exception as e:
        await processing_message.edit(f"**โข ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุจุญุซ:** `{str(e)}`")
        return

    await processing_message.edit("**โข ุฌุงุฑู ุชุญููู ูุชุญููู ุงูุตูุช... โณ**")

    downloaded_file = None # ููุชุฃูุฏ ูู ุชุนุฑูู ุงููุชุบูุฑ
    try:
        # ุงุณุชุฎุฏุงู yt_dlp ููุชูุฒูู ูุงูุชุญููู
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(video_url, download=True)

            # yt-dlp ุณูููู ุจุงูุชุญููู ุฅูู m4a ุฅุฐุง ุชู ุชุญุฏูุฏ preferredcodec
            # ูุญุชุงุฌ ุฅูู ุงูุญุตูู ุนูู ุงุณู ุงูููู ุงูุฐู ุชู ุฅูุดุงุคู
            # ูุงูุจ ุงุณู ุงูููู: %(title)s.%(ext)s -> Title.m4a
            # ูุฌุจ ุงุณุชุฎูุงุต ุงุณู ุงูููู ูู info_dict ุฃู ุงุณุชุฎุฏุงู ุงููุงูุจ

            # ุงูุทุฑููุฉ ุงููุจุงุดุฑุฉ ูุงุณุชุฎูุงุต ุงุณู ุงูููู ุจุนุฏ ุงูุชุญููู
            # yt-dlp ูุถุน ุงููุณุงุฑ ุงููุงูู ููููู ุงููุญูู ูู 'requested_downloads'
            # ุฅุฐุง ูุงู ููุงู ุฃูุซุฑ ูู ุทูุจุ ูุฅู ุงูุฃูู ูู ุงูููู ุงูุฑุฆูุณู
            if 'requested_downloads' in info_dict and info_dict['requested_downloads']:
                downloaded_file = info_dict['requested_downloads'][0]['filepath']
            else:
                # ุทุฑููุฉ ุงุญุชูุงุทูุฉ ุฅุฐุง ูู ูุฌุฏ 'requested_downloads'
                # ูุณุชุฎุฏู ูุนูููุงุช ุงูุนููุงู ูุงูุงูุชุฏุงุฏ ุงููุชููุน
                title_from_info = info_dict.get('title', 'unknown_title')
                # ุชูุธูู ุงูุนููุงู ููููู ุตุงูุญูุง ูุงุณู ููู
                safe_title = "".join([c if c.isalnum() or c in (' ', '_', '-') else '_' for c in title_from_info])
                safe_title = safe_title[:50].strip() # ุชุญุฏูุฏ ุทูู ุงูุงุณู
                downloaded_file = f"{safe_title}.m4a"

            # ุงูุชุฃูุฏ ูู ุฃู ุงูููู ููุฌูุฏ ุจุงููุนู
            if not os.path.exists(downloaded_file):
                 raise FileNotFoundError(f"Downloaded file '{downloaded_file}' not found after extraction.")

        # ุชู ุงูุชุญูููุ ุงูุขู ูู ุจุฅุฑุณุงู ุงูููู
        await processing_message.edit("**โข ุฌุงุฑู ุฑูุน ุงูููู... โฌ๏ธ**")

        # ุงุณุชุฎูุงุต ุงููุนูููุงุช ูู info_dict
        title = info_dict.get('title', 'Unknown Title')
        duration = info_dict.get('duration', 0)
        minutes, seconds = divmod(duration, 60)
        time_format = f"{minutes}:{seconds:02d}"

        caption_text = f"**๐ถ ุตูุช (yt-dlp):** `{title}`\n**โข ุงููุฏุฉ:** `{time_format}`"

        # ุฅุฑุณุงู ุงูููู ุฅูู ุงููุญุงุฏุซุฉ
        await zq_lo.send_file(
            event.chat_id,
            downloaded_file,
            caption=caption_text,
            thumb=thumb_name, # ุงูุตูุฑุฉ ุงููุตุบุฑุฉ ุงูุชู ุชู ุชูุฒูููุง ุณุงุจููุง
            force_document=False, # ุฅุฑุณุงู ูููู ุตูุชู ุนุงุฏู
        )
        await processing_message.delete() # ุญุฐู ุฑุณุงูุฉ "ุฌุงุฑู ุฑูุน ุงูููู..."

    except yt_dlp.utils.DownloadError as e:
        # ูุนุงูุฌุฉ ุฃุฎุทุงุก yt-dlp ุงููุญุฏุฏุฉ
        error_message = f"**โข ูุดู ุชุญููู ุฃู ุชุญููู ุงูููู ุจุงุณุชุฎุฏุงู yt-dlp.**\n" \
                        f"**โข ุงูุฎุทุฃ:** `{str(e)}`"
        await processing_message.edit(error_message)
    except FileNotFoundError as e:
        # ูุนุงูุฌุฉ ุฎุทุฃ ุนุฏู ูุฌูุฏ ุงูููู
        await processing_message.edit(f"**โข ุฎุทุฃ: ุงูููู ุงูุฐู ุชู ุชูุฒููู ุบูุฑ ููุฌูุฏ.**\n**โข ุงูุชูุงุตูู:** `{str(e)}`")
    except Exception as e:
        # ูุนุงูุฌุฉ ุฃู ุฃุฎุทุงุก ุนุงูุฉ ุฃุฎุฑู
        error_message = f"**โข ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงููุนุงูุฌุฉ.**\n" \
                        f"**โข ุงูุฎุทุฃ:** `{str(e)}`\n" \
                        f"**โข ุชุฃูุฏ ูู ุชุซุจูุช yt-dlp ุจุดูู ุตุญูุญุ ูุฃู ููู ุงูููููุฒ ุตุงูุญ.**"
        await processing_message.edit(error_message)
    finally:
        # ุชูุธูู ุงููููุงุช ุจุนุฏ ุงูุฅุฑุณุงู ุฃู ูู ุญุงูุฉ ุญุฏูุซ ุฎุทุฃ
        if downloaded_file and os.path.exists(downloaded_file):
            remove_if_exists(downloaded_file)
        if thumb_name and os.path.exists(thumb_name):
            remove_if_exists(thumb_name)
